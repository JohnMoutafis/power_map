"""
Django settings for power_map project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
import email.utils
import os

from decouple import Csv, config
from dj_database_url import parse as dburl

# General Settings
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', cast=bool, default=True)
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv(), default='127.0.0.1,localhost')

ADMINS = config('ADMINS', cast=Csv(), default=None)
if ADMINS:
    ADMINS = email.utils.getaddresses(ADMINS)

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.gis',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 3rd party apps
    'corsheaders',
    'django_celery_beat',
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_gis',
    'rest_framework_swagger',
    'webpack_loader',
    # modules
    'modules.countries.apps.CountriesConfig',
    'modules.country_capacity.apps.CountryCapacityConfig',
    'modules.country_generation.apps.CountryGenerationConfig',
    'modules.country_forecast.apps.CountryForecastConfig',
    'modules.dashboard.apps.DashboardConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'power_map.urls'
CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'power_map.wsgi.application'

# Database
DATABASES = {'default': config('DATABASE_URL', cast=dburl)}
DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Rest Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
}

# Celery Settings
REDIS_URL = config('REDIS_URL', default='redis://localhost:6379')
CELERY_BROKER_URL = f'{REDIS_URL}/0'
CELERY_RESULT_BACKEND = f'{REDIS_URL}/1'

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = 'staticfiles'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'staticfiles/assets'),
)

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}

if not DEBUG:
    WEBPACK_LOADER['DEFAULT'].update({
        'BUNDLE_DIR_NAME': 'dist/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats-prod.json')
    })

# Logging Settings
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'power_map': {
            'handlers': ['console'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propagate': False,
        }
    }
}

# ENTSOE endpoint settings
ENTSOE_BASE_URL = config('ENTSOE_BASE_URL', default='https://transparency.entsoe.eu/api')
ENTSOE_SECURITY_TOKEN = config('ENTSOE_SECURITY_TOKEN')
ENTSOE_DATETIME_FORMAT = '%Y%m%d%H00'
ENTSOE_COUNTRY_ZONES = {
    'Albania': '10YAL-KESH-----5',
    'Austria': '10YAT-APG------L',
    'Belarus': '10Y1001A1001A51S',
    'Belgium': '10YBE----------2',
    'Bosnia and Herzegovina': '10YBA-JPCC-----D',
    'Bulgaria': '10YCA-BULGARIA-R',
    'Croatia': '10YHR-HEP------M',
    'Cyprus': '10YCY-1001A0003J',
    'Czech Republic': '10YCZ-CEPS-----N',
    'Denmark': '10Y1001A1001A65H',
    'Estonia': '10Y1001A1001A39I',
    'The former Yugoslav Republic of Macedonia	MKD	MK': '10YMK-MEPSO----8',
    'Finland': '10YFI-1--------U',
    'France': '10YFR-RTE------C',
    'Germany': '10Y1001A1001A83F',
    'Greece': '10YGR-HTSO-----Y',
    'Hungary': '10YHU-MAVIR----U',
    'Iceland': 'IS',  # Info missing here from REST endpoint docs.
    'Ireland': '10YIE-1001A00010',
    'Italy': '10YIT-GRTN-----B',
    'Latvia': '10YLV-1001A00074',
    'Lithuania': '10YLT-1001A0008Q',
    'Luxembourg': '10YLU-CEGEDEL-NQ',
    'Malta': '10Y1001A1001A93C',
    'Moldova': '10Y1001A1001A990',
    'Montenegro': '10YCS-CG-TSO---S',
    'Netherlands': '10YNL----------L',
    'Norway': '10YNO-0--------C',
    'Poland': '10YPL-AREA-----S',
    'Portugal': '10YPT-REN------W',
    'Romania': '10YRO-TEL------P',
    'Russia': '10Y1001A1001A49F',
    'Serbia': '10YCS-SERBIATSOV',
    'Slovakia': '10YSK-SEPS-----K',
    'Slovenia': '10YSI-ELES-----O',
    'Spain': '10YES-REE------0',
    'Sweden': '10YSE-1--------K',
    'Switzerland': '10YCH-SWISSGRIDZ',
    'Turkey': '10YTR-TEIAS----W',
    'Ukraine': '10Y1001C--00003F',
    'United Kingdom': '10YGB----------A'
}
ENTSOE_PRODUCTION_TYPE_MAPPING = {
    'B01': 'biomass',
    'B02': 'fossil_lignite',
    'B03': 'fossil_coal_derived_gas',
    'B04': 'fossil_gas',
    'B05': 'fossil_hard_coal',
    'B06': 'fossil_oil',
    'B07': 'fossil_oil_shale',
    'B08': 'fossil_peat',
    'B09': 'geothermal',
    'B10': 'hydro_pumped_storage',
    'B11': 'hydro_river_and_poundage',
    'B12': 'hydro_water_reservoir',
    'B13': 'marine',
    'B14': 'nuclear',
    'B15': 'other_renewable',
    'B16': 'solar',
    'B17': 'waste',
    'B18': 'wind_offshore',
    'B19': 'wind_onshore',
    'B20': 'other'
}
